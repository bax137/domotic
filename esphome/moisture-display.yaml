esphome:
  name: moisture-display
  platform: ESP8266
  board: d1_mini

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: "ec44ae6c6f6f1d0089fcd1a3a0855696"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Moisture-Display"
    password: "A1wkQMjhmMU3"

i2c:
  sda: D2
  scl: D1
  
text_sensor:
  - platform: homeassistant
    name: "Moisture cafeier"
    id: zeeflora_moisture_1
    entity_id: sensor.zeeflora_1_soil_moisture
    internal: true
  - platform: homeassistant
    name: "Moisture athurium"
    id: zeeflora_moisture_2
    entity_id: sensor.zeeflora_2_soil_moisture
    internal: true
  - platform: homeassistant
    name: "Moisture 4"
    id: gw1000_moisture_4
    entity_id: sensor.gw1000_pro_soil_moisture_4
    internal: true
    
time:
  - platform: homeassistant
    id: esptime

font:
  - file: "fonts/arial.ttf"
    id: font_15
    size: 15
  - file: "fonts/arial.ttf"
    id: font_20
    size: 18
  - file: 'fonts/slkscr.ttf'
    id: font_value2
    size: 8
    
display:
  - platform: ssd1306_i2c
    id: screen
    model: "SSD1306_128x64"
    reset_pin: D0
    address: 0x3C
    rotation: 180
    pages:
    - id: page1
      lambda: |-
        if (id(zeeflora_moisture_1).has_state()) {
          it.printf(0, 0, id(font_20), "Cafeier %s%%", id(zeeflora_moisture_1).state.c_str());
        }
        if (id(zeeflora_moisture_2).has_state()) {
          it.printf(0, 22, id(font_20), "Anthurium %s%%", id(zeeflora_moisture_2).state.c_str());
        }
        // Print time in HH:MM format
        it.strftime(42, 44, id(font_20), "%H:%M", id(esptime).now());
    - id: page2
      lambda: |-
        if (id(gw1000_moisture_4).has_state()) {
          it.printf(0, 0, id(font_20), "Moisture 4 %s%%", id(gw1000_moisture_4).state.c_str());
        }

        // Print time in HH:MM format
        it.strftime(42, 44, id(font_20), "%d/%m", id(esptime).now());

interval:
  - interval: 5s
    then:
      - display.page.show_next: screen
      - component.update: screen
      
captive_portal:

web_server:
  port: 80